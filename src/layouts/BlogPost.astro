---
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import ArticleHeader from "@/components/ArticleHeader.astro";

const { frontmatter } = Astro.props;
---

<Layout
	title={frontmatter.title + " â€“ Martin Sollien"}
	description={frontmatter.metaDescription}
>
	<Header />
	<article
		id="article"
		class="w-full mb-24 p-4 md:p-0 flex flex-col items-center px-4 lg:px-20 relative"
	>
		<ArticleHeader headerEffect={frontmatter.headerEffect}>
			{frontmatter.title}
		</ArticleHeader>
		<div class="md:grid md:grid-cols-4 md:gap-10 w-full">
			<div class="mb-12 md:col-span-1 relative">
				<div
					class="w-full border-main-default border p-4 sticky top-10"
				>
					<p>METADATA</p>
					<hr class="mt-4 mb-4 border-dashed" />
					<dl>
						<div class="flex justify-between mb-4">
							<dt>FORFATTER</dt>
							<dd>Martin Sollien</dd>
						</div>
						<div class="flex justify-between mb-4">
							<dt>DATO</dt>
							<dd>{frontmatter.date}</dd>
						</div>
						<div class="flex justify-between mb-4">
							<dt>KATEGORI</dt>
							<dd class="flex gap-4">
								<span
									class="border border-dashed border-main-default p-1 py-[2px] text-sm"
									>{frontmatter.categories}</span
								>
							</dd>
						</div>
						<hr class="mt-4 mb-4 border-dashed" />
						<div class="flex justify-between items-center">
							<dt>KARAKTER</dt>
							<dd>
								{
									frontmatter.score && (
										<div class="ml-5 mt-1 dice-container">
											<div
												class={`dice dice-${frontmatter.score}`}
											>
												{Array.from({
													length: frontmatter.score,
												}).map((_, i) => (
													<div class="dot" />
												))}
											</div>
										</div>
									)
								}
							</dd>
						</div>
					</dl>
				</div>
			</div>
			<div class="md:col-span-2 flex justify-center">
				<div class="w-full max-w-prose relative">
					<h2 id="description" class="text-xl mb-12">
						{frontmatter.description}
					</h2>
					{
						frontmatter.preface &&
							frontmatter.preface.length > 0 && (
								<div class="mb-12 border border-cyan-400 bg-cyan-950 p-4">
									<p class="font-bold before:content-['(!)'] before:font-normal before:pr-2 before:text-cyan-400 before:tracking-tight mb-2">
										Preface
									</p>
									<p>{frontmatter.preface}</p>
								</div>
							)
					}
					<slot class="main-blog-content" />
				</div>
			</div>
			<div class="md:col-span-1"></div>
		</div>
	</article>
</Layout>

<style lang="scss">
	:global(#article h2:not(#description, #secondary-title)) {
		font-size: 20px;
		font-weight: 600;
		margin-top: 40px;
		margin-bottom: 10px;
	}

	:global(.fact-box) {
		padding: 1rem;
		border: var(--default-border);

		&::before {
			display: block;
			padding-bottom: 8px;
			margin-bottom: 8px;
			content: "Facts!";
			font-weight: bold;
			border-bottom: 1px solid #defcfa;
		}
	}

	.dice-container {
		display: inline-block;
	}

	.dice {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		grid-template-rows: repeat(3, 1fr);
		width: 2.1rem;
		height: 2.1rem;
		background-color: #98ff5c;
		padding: 4px;
		gap: 1px;
		position: relative;
	}

	.dot {
		width: 0.5rem;
		height: 0.5rem;
		background-color: black;
		border-radius: 50%;
		justify-self: center;
		align-self: center;
	}

	/* Dice patterns based on standard dice configuration */
	/* For dice-1, show only the middle dot */
	.dice-1 .dot:nth-child(1) {
		grid-area: 2 / 2; /* Center dot in the middle of the grid */
	}

	/* For dice-2, show top-left and bottom-right */
	.dice-2 .dot:nth-child(1) {
		grid-area: 1 / 1;
	}
	.dice-2 .dot:nth-child(2) {
		grid-area: 3 / 3;
	}

	/* For dice-3, add the middle dot */
	.dice-3 .dot:nth-child(1) {
		grid-area: 1 / 1;
	}
	.dice-3 .dot:nth-child(2) {
		grid-area: 2 / 2;
	}
	.dice-3 .dot:nth-child(3) {
		grid-area: 3 / 3;
	}

	/* For dice-4, show all four corners */
	.dice-4 .dot:nth-child(1) {
		grid-area: 1 / 1;
	}
	.dice-4 .dot:nth-child(2) {
		grid-area: 1 / 3;
	}
	.dice-4 .dot:nth-child(3) {
		grid-area: 3 / 1;
	}
	.dice-4 .dot:nth-child(4) {
		grid-area: 3 / 3;
	}

	/* For dice-5, add the middle dot */
	.dice-5 .dot:nth-child(1) {
		grid-area: 1 / 1;
	}
	.dice-5 .dot:nth-child(2) {
		grid-area: 1 / 3;
	}
	.dice-5 .dot:nth-child(3) {
		grid-area: 2 / 2;
	}
	.dice-5 .dot:nth-child(4) {
		grid-area: 3 / 1;
	}
	.dice-5 .dot:nth-child(5) {
		grid-area: 3 / 3;
	}

	/* For dice-6, show 3 dots on each side */
	.dice-6 .dot:nth-child(1) {
		grid-area: 1 / 1;
	}
	.dice-6 .dot:nth-child(2) {
		grid-area: 1 / 3;
	}
	.dice-6 .dot:nth-child(3) {
		grid-area: 2 / 1;
	}
	.dice-6 .dot:nth-child(4) {
		grid-area: 2 / 3;
	}
	.dice-6 .dot:nth-child(5) {
		grid-area: 3 / 1;
	}
	.dice-6 .dot:nth-child(6) {
		grid-area: 3 / 3;
	}
</style>
